/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class bitparallel_communication_CanCommsHandler */

#ifndef _Included_bitparallel_communication_CanCommsHandler
#define _Included_bitparallel_communication_CanCommsHandler
#ifdef __cplusplus
extern "C" {
#endif
#undef bitparallel_communication_CanCommsHandler_RECEIVER_MESSAGE_QUEUE_SIZE
#define bitparallel_communication_CanCommsHandler_RECEIVER_MESSAGE_QUEUE_SIZE 1024L
#undef bitparallel_communication_CanCommsHandler_RECEIVER_QUEUE_POLL_TIMEOUT_MS
#define bitparallel_communication_CanCommsHandler_RECEIVER_QUEUE_POLL_TIMEOUT_MS 100LL
/*
 * Class:     bitparallel_communication_CanCommsHandler
 * Method:    nativeOpen
 * Signature: (Ljava/lang/String;[Lbitparallel/communication/CanFilter;)J
 */
JNIEXPORT jlong JNICALL Java_bitparallel_communication_CanCommsHandler_nativeOpen
  (JNIEnv *, jobject, jstring, jobjectArray);

/*
 * Class:     bitparallel_communication_CanCommsHandler
 * Method:    nativeTransmit
 * Signature: (Lbitparallel/communication/CanMessage;J)V
 */
JNIEXPORT void JNICALL Java_bitparallel_communication_CanCommsHandler_nativeTransmit
  (JNIEnv *, jobject, jobject, jlong);

/*
 * Class:     bitparallel_communication_CanCommsHandler
 * Method:    nativeReceiveTask
 * Signature: (Ljava/util/concurrent/LinkedBlockingQueue;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/concurrent/atomic/AtomicBoolean;J)V
 */
JNIEXPORT void JNICALL Java_bitparallel_communication_CanCommsHandler_nativeReceiveTask
  (JNIEnv *, jobject, jobject, jobject, jobject, jlong);

/*
 * Class:     bitparallel_communication_CanCommsHandler
 * Method:    nativeClose
 * Signature: (Ljava/lang/String;J)V
 */
JNIEXPORT void JNICALL Java_bitparallel_communication_CanCommsHandler_nativeClose
  (JNIEnv *, jobject, jstring, jlong);

#ifdef __cplusplus
}
#endif
#endif
